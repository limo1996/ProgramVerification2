field f1: Int

//:: UnexpectedOutput(typechecker.error, /Silver/issue/104/)
predicate P(x: Int) {
  true
}

//:: UnexpectedOutput(typechecker.error, /Silver/issue/104/)
predicate P2(this: Ref, x: Int) {
  true
}

method permUse()
{
  var r1: Ref
  //no error because final AST is never created (due to type-checker errors),
  //this check is performed in the AST node
  assert forperm[f1] r :: perm(r.f1) > none
}

method nonRefPredicateUse()
{
  var r1: Ref
  //:: MissingOutput(typechecker.error, /Silver/issue/104/)
  assert forperm[P] r :: true
}

method nonSingleArgumentPredicateUse()
{
  var r1: Ref
  //:: MissingOutput(typechecker.error, /Silver/issue/104/)
  assert forperm[P2] r :: true
}